plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"

}

// --- Start: Read local.properties for API Key ---
def flutterProjectRoot = rootProject.projectDir.parentFile
def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
def properties = new Properties()

if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        properties.load(reader)
    }
} else {
    // Handle case where local.properties is missing
    // For development, you might just print a warning.
    // For CI/CD, you might want to throw an error to ensure key is present.
    println "WARNING: 'local.properties' not found at ${localPropertiesFile.absolutePath}. " +
            "Google Maps API key might be missing."
}

// Get the API key, providing an empty string as a default if not found
def googleMapsKey = properties.getProperty('MAPS_API_KEY', '')


android {
    namespace = "com.example.uber_eats_clone"
    compileSdk = 36
    ndkVersion = "27.0.12077973"

    compileOptions {
        //  sourceCompatibility = JavaVersion.VERSION_1_8
        // targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        // jvmTarget = JavaVersion.VERSION_1_8
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.uber_eats_clone"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        // targetSdk = flutter.targetSdkVersion
        targetSdk 35
        // versionCode = 1
        // versionName = "1.0"
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        manifestPlaceholders += [googleMapsKey: googleMapsKey]        
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation(platform("com.google.firebase:firebase-bom:33.9.0"))

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation("com.google.firebase:firebase-auth")

    // Also add the dependency for the Google Play services library and specify its version
    implementation("com.google.android.gms:play-services-auth:21.3.0")
    
    implementation 'com.google.android.play:integrity:1.4.0'

    implementation("com.google.android.gms:play-services-maps:19.0.0")
    
    // implementation 'com.google.android.gms:play-services-base:latest_version' // Check for latest version
}
